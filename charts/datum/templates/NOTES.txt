1. Get the Datum service information by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export STRATUM_NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "datum.fullname" . }})
  export API_NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ include "datum.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Datum Stratum Server: $NODE_IP:$STRATUM_NODE_PORT"
  echo "Datum API: http://$NODE_IP:$API_NODE_PORT"
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "datum.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "datum.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "Datum Stratum Server: $SERVICE_IP:{{ .Values.service.ports.stratum }}"
  echo "Datum API: http://$SERVICE_IP:{{ .Values.service.ports.api }}"
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "datum.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Datum Stratum Server (port-forward): kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ .Values.service.ports.stratum }}:{{ .Values.service.ports.stratum }}"
  echo "Datum API (port-forward): kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME {{ .Values.service.ports.api }}:{{ .Values.service.ports.api }}"
  echo "Visit http://127.0.0.1:{{ .Values.service.ports.api }} to access the Datum API"
{{- end }}

2. Datum requires a Bitcoin node with RPC access. Make sure:
   - Bitcoin RPC service is available at: {{ .Values.bitcoin.rpcHost }}
   - RPC password secret exists: {{ .Values.bitcoin.rpcPasswordSecret.name }}
   
3. Check Datum status:
   kubectl --namespace {{ .Release.Namespace }} logs -f deployment/{{ include "datum.fullname" . }}
